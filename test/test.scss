$grids: (
  main: (
    columns: 12,
    gap: 1rem,
  ),
);

$_grid-test-mode: true;

@import '../scss/tiny-grid.scss';
@import 'test-outputs';
@import 'true';

@include describe('map-to-css mixin') {
  @include it('Converts a mixin to a set of CSS properties') {
    $map: (
      color: #000,
      width: 100px,
    );

    @include assert {
      @include output {
        @include map-to-css($map);
      }

      @include expect {
        color: #000;
        width: 100px;
      }
    }
  }
}

@include describe('is-plain-integer function') {
  @include it('Checks whether a value is a plain integer') {
    @include assert-equal(is-plain-integer(3), true);
  }

  @include it('Checks whether a value with units is a plain integer') {
    @include assert-equal(is-plain-integer(3px), false);
  }

  @include it('Checks whether a map value is a plain integer') {
    @include assert-equal(is-plain-integer((foo: bar)), false);
  }

  @include it('Checks whether a list value is a plain integer') {
    @include assert-equal(is-plain-integer((3,)), false);
  }

  @include it('Checks whether a string value is a plain integer') {
    @include assert-equal(is-plain-integer('3'), false);
  }
}

@include describe('tiny-grid') {
  @include it('Generates a basic 12-column grid') {
    $grid: (
      main: (
        columns: 12,
        gap: 1rem,
      ),
    );

    @include assert {
      @include output {
        @include tiny-grid($grids);
      }
      
      @include expect {
        @include test-output-single-grid;
      }
    }
  }

  @include it('Generates a 12-column and 2-column grid') {
    $grids: (
      main: (
        columns: 12,
        gap: 1rem,
      ),
      sidebar: (
        columns: 2,
        gap: 20px,
      ),
    );

    @include assert {
      @include output {
        @include tiny-grid($grids);
      }
      
      @include expect {
        @include test-output-two-grids;
      }
    }
  }
}

@include report;
